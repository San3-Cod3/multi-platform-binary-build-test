---
name: Multi-Platform Build and Package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Build Linux Executable
        run: |
          source venv/bin/activate
          echo "Building Linux executable..."
          pyinstaller --onefile main.py
          mkdir -p dist/linux
          mv dist/main dist/linux/grok-farewell-linux

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: grok-farewell-linux-${{ github.sha }}
          path: dist/linux

  build-macos:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Build macOS Executable
        run: |
          source venv/bin/activate
          echo "Building macOS executable..."
          pyinstaller --onefile main.py
          mkdir -p dist/macos
          mv dist/main dist/macos/grok-farewell-macos

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: grok-farewell-macos-${{ github.sha }}
          path: dist/macos

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m venv venv
          venv\Scripts\activate
          pip install -r requirements.txt

      - name: Build Windows Executable
        run: |
          venv\Scripts\activate
          echo "Building Windows executable..."
          pyinstaller --onefile main.py
          mkdir dist\windows
          move dist\main.exe dist\windows\grok-farewell-windows.exe

      - name: Zip Artifact
        run: |
          echo "Zipping artifact..."
          Compress-Archive -Path dist\windows\* `
            -DestinationPath "grok-farewell-windows-${{ github.sha }}.zip"

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: grok-farewell-windows-${{ github.sha }}
          path: grok-farewell-windows-${{ github.sha }}.zip

  build-android:
    name: Build (Android APK via Buildozer)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip zip unzip openjdk-17-jdk
          pip install --upgrade pip
          pip install buildozer cython virtualenv

      - name: Initialize Buildozer Environment
        run: |
          echo "Initializing Buildozer environment..."
          buildozer init || true

      - name: Build Android APK
        run: |
          echo "Building Android APK..."
          buildozer -v android debug

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v4
        with:
          name: grok-farewell-android-${{ github.sha }}
          path: bin/*.apk

  lint-yaml:
    name: Lint YAML
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install yamllint
        run: |
          sudo apt-get update
          sudo apt-get install -y yamllint

      - name: Lint Workflow Files
        run: |
          yamllint .github/workflows/*.yml || true
